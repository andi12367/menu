#!/bin/bash
# COLOR VALIDATION
clear
y='\033[1;33m' #yellow
BGX="\033[42m"
CYAN="\033[96m"
z="\033[96m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'
#INTALLER-UDP
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
IPVPS=$(curl -s ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
#########################
# USERNAME
rm -f /usr/bin/user
username=$(curl -sS https://raw.githubusercontent.com/RanTempest/scvps/main/izin | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
# validity
rm -f /usr/bin/e
valid=$(curl -sS https://raw.githubusercontent.com/RanTempest/scvps/main/izin | grep $MYIP | awk '{print $3}')
echo "$valid" >/usr/bin/e
# DETAIL ORDER
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
clear
# CERTIFICATE STATUS
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""

# Status ExpiRED Active | Geo Project
Info="(${green}Active${NC})"
Error="(${RED}ExpiRED${NC})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl -sS https://raw.githubusercontent.com/RanTempest/scvps/main/izin | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
echo -e "\e[32mloading...\e[0m"
clear

# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Status | Geo Project
clear
# STATUS SERVICE  SSH
if [[ $ssh_service == "running" ]]; then
   status_ssh="${green}ON✓${NC}"
else
   status_ssh="${z}🔴${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${green}ON✓${NC}"
else
    status_ws_epro="${z}🔴${NC} "
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then
   status_haproxy="${green}ON✓${NC}"
else
   status_haproxy="${z}🔴${NC} "
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then
   status_xray="${green}ON✓${NC}"
else
   status_xray="${z}🔴${NC} "
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then
   status_nginx="${green}ON✓${NC}"
else
   status_nginx="${z}🔴${NC} "
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then
   status_dropbear="${green}ON✓${NC}"
else
   status_dropbear="${z}🔴${NC} "
fi
#####INFOAKUN
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
ssx=$(grep -c -E "^#ss# " "/etc/xray/config.json")
let ssa=$ssx/2
###########
KANAN="\033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m$NC"
KIRI="\033[1;32m>\033[1;33m>\033[1;31m>\033[1;31m$NC"
########
r="\033[1;31m"  #BLUE
a=" ${z}ACCOUNT PREMIUM" 
echo -e " "
echo -e " ${NC} ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓${NC}"
echo -e " ${NC} │          WELCOME TO AUTOSCRIPT PREMIUM BY TEMPEST STORE         ${NC}│${NC}"
echo -e " ${NC} ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛${NC}"
echo -e " ${NC} ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓${NC}"
echo -e " ${NC} │$BRED » ${bblue}SYSTEM VPS ${YELL} : ${NC}$MODEL${NC}"
echo -e " ${NC} │$BRED » ${bblue}RAM SERVER ${YELL} : ${NC}$uram / $tram MB ${NC}"
echo -e " ${NC} │$BRED » ${bblue}DATE ${YELL}       : ${NC}$DATEVPS${NC}"
echo -e " ${NC} │$BRED » ${bblue}TIME ${YELL}       : ${NC}$TIMEZONE${NC}"
echo -e " ${NC} │$BRED » ${bblue}UPTIME ${YELL}     : ${NC}$SERONLINE${NC}"
echo -e " ${NC} │$BRED » ${bblue}IP VPS ${YELL}     : ${BRED}$IPVPS${NC}"
echo -e " ${NC} │$BRED » ${bblue}DOMAIN ${YELL}     : ${green}$domain${NC}"
echo -e " ${NC} ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛$NC"
echo -e " ${NC}                     ${KIRI} INFORMATION ACCOUNT ${KANAN}"
echo -e " ${NC}         ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}" | lolcat
echo -e "               ${BRED} SSH/OPENVPN/UDP  $YELL:$NC $ssh1  ${YELL}$a"
echo -e "               ${BRED} VMESS/WS/GRPC    $YELL:$NC $vma  ${YELL}$a"
echo -e "               ${BRED} VLESS/WS/GRPC    $YELL:$NC $vla  ${YELL}$a"
echo -e "               ${BRED} TROJAN/WS/GRPC   $YELL:$NC $trb  ${YELL}$a"
echo -e "               ${BRED} SHADOW/WS/GRPC   $YELL:$NC $ssa  ${YELL}$a"
echo -e " ${NC}         ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}" | lolcat
echo -e " ${NC}               ${KIRI} MENU AUTOSCRIPT BY TEMPEST STORE    ${KANAN}"
echo -e " ${NC} ┏━━━━━━━━━━━━━━━━━━━━┓┏━━━━━━━━━━━━━━━━━━━━┓┏━━━━━━━━━━━━━━━━━━━━┓$NC"
echo -e " ${NC} │  ${bblue}SSH     : $status_ssh          ${bblue}NGINX : $status_nginx            ${bblue}HAPROXY  : $status_haproxy  ${NC}│${NC}"
echo -e " ${NC} │  ${bblue}WS-ePro : $status_ws_epro          ${bblue}XRAY  : $status_xray            ${bblue}DROPBEAR : $status_dropbear  ${NC}│${NC}"
echo -e " ${NC} ┗━━━━━━━━━━━━━━━━━━━━┛┗━━━━━━━━━━━━━━━━━━━━┛┗━━━━━━━━━━━━━━━━━━━━┛$NC"
echo -e " ${NC} ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓${NC}"
echo -e " ${NC} │$NC [${BRED}01$NC]${YELL} MENU SSH VIP  $NC│ [${BRED}09$NC]${YELL} AUTO REBOOT     $NC│ [${BRED}17$NC]${YELL} RESTART VPS   ${NC}│${NC}"
echo -e " ${NC} │$NC [${BRED}02$NC]${YELL} MENU VMESS    $NC│ [${BRED}10$NC]${YELL} MENU PORT       $NC│ [${BRED}18$NC]${YELL} SET DOMAIN    ${NC}│$NC"
echo -e " ${NC} │$NC [${BRED}03$NC]${YELL} MENU VLESS    $NC│ [${BRED}11$NC]${YELL} SPEEDTEST       $NC│ [${BRED}19$NC]${YELL} CERT SSL      ${NC}│$NC"
echo -e " ${NC} │$NC [${BRED}04$NC]${YELL} MENU TROJAN   $NC│ [${BRED}12$NC]${YELL} RUNNING CEK     $NC│ [${BRED}20$NC]${YELL} INSTALL UDP   ${NC}│$NC"
echo -e " ${NC} │$NC [${BRED}05$NC]${YELL} MENU SHADOW   $NC│ [${BRED}13$NC]${YELL} CLEAR LOG       $NC│ [${BRED}21$NC]${YELL} CLEAR CACHE   ${NC}│$NC"
echo -e " ${NC} │$NC [${BRED}06$NC]${YELL} MENU TRIAL    $NC│ [${BRED}14$NC]${YELL} CREATE SLOW     $NC│ [${BRED}22$NC]${YELL} CEK BANDWITH  ${NC}│$NC"
echo -e " ${NC} │$NC [${BRED}07$NC]${YELL} CEK RAM/CPU   $NC│ [${BRED}15$NC]${YELL} BCKP/RSTR       $NC│ [${BRED}23$NC]${YELL} UP SCRIPT     ${NC}│$NC"
echo -e " ${NC} │$NC [${BRED}08$NC]${YELL} DELL ALL EXP  $NC│ [${BRED}16$NC]${YELL} REBOOT VPS      $NC│ [${BRED}24$NC]${YELL} MENU BOT VIP  ${NC}│$NC"
echo -e " ${NC} │                                                                ${NC}│"
echo -e " ${NC} │$NC [${BRED}25$NC]${YELL} CHANGE BANNER SSH ${KANAN}                                     ${NC}│"
echo -e " ${NC} │$NC [${BRED}26$NC]${BRED} LOG CREATE USER ACCOUNT ${KANAN}                               ${NC}│"
echo -e " ${NC} ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛${NC}"
echo -e " ${NC} ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓${NC}"
echo -e " ${NC} │$bblue Developer      $YELL:$NC RanTempest"
echo -e " ${NC} │$bblue Channel        $YELL:$NC t.me/rantempestchannel"
echo -e " ${NC} │$bblue Username       $YELL:$green $username "
echo -e " ${NC} │$bblue Expired script $YELL:$NC $exp ${NC}/$green $certifacate ${NC}Days${NC}"
echo -e " ${NC} ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛${NC}"
echo -e " "
read -p "  Select From Options [ 1-26 ] »» " opt
echo -e ""
case $opt in
1 | 01)
clear
m-sshws
;;
2 | 02)
clear
m-vmess
;;
3 | 03)
clear
m-vless
;;
4 | 04)
clear
m-trojan
;;
5 | 05)
clear
m-ssws
;;
6 | 06)
clear
limitspeed
;;
7 | 07)
clear
gotop
echo ""
echo -e " ${GREEN} Back to menu in 1 sec ${NC}"
sleep 1
menu
;;
8 | 08)
clear
xp
echo ""
echo -e " ${GREEN} Back to menu in 1 sec ${NC}"
sleep 1
menu
;;
9 | 09)
clear
autoreboot
;;
10)
clear
prot
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
menu
;;
11)
clear
speedtest
echo ""
read -n 1 -s -r -p "Press any key to back on menu"
menu
;;
12)
clear
run
;;
13)
clear
clearlog
;;
14)
clear
bw
;;
15)
clear
menu-backup
;;
16)
clear
reboot
;;
17)
clear
restart
;;
18)
clear
addhost
;;
19)
clear
fixcert
;;
20)
clear
wget -q https://github.com/zhets/project/raw/main/ssh/udp-custom.sh ; bash udp-custom.sh
;;
21)
clear
clearcache
;;
22)
clear
bot
;;
23)
clear
wget https://raw.githubusercontent.com/RanTempest/scvps/main/update.sh && chmod +x update.sh && ./update.sh
;;
24)
clear
add-bot-panel
;;
25)
clear
nano /etc/kyt.txt
;;
0 | 00)
figlet ALATHACLOUD
exit
;;
x)
menu
;;
*)
echo -e ""
menu
;;
esac
